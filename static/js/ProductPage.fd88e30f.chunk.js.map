{"version":3,"file":"static/js/ProductPage.fd88e30f.chunk.js","mappings":"mNAgFA,UA/D8B,WAC1B,IAAAA,GAA0BC,EAAAA,EAAAA,YAAgBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,IAbAE,EAAAA,EAAAA,YAAU,WACkB,SAAAC,IAQvB,OARuBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE+BC,EAAAA,EAAAA,IAAU,iCAAiC,KAAD,EAAAN,EAAAG,EAAAI,KAAzDN,EAAID,EAAJC,KACRZ,EAASY,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEfM,MAAM,sDACNnB,EAAS,KAAK,yBAAAa,EAAAO,OAAA,GAAAX,EAAA,mBAErBY,MAAA,KAAAC,UAAA,EATY,WACWjB,EAAAgB,MAAC,KAADC,UAAA,CASxBC,EACJ,GAAG,KAEEzB,EACD,OACI0B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SAAC,kBAMnC,GAAIxB,EAAI,CACJ,IAAMyB,EAAS7B,EAAM8B,MAAK,SAAAC,GAAG,OAAIA,EAAI3B,MAAQA,CAAE,IAE/C,OACIyB,IACAH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACpBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAChCF,EAAAA,EAAAA,KAAA,OAAKO,IAAKJ,EAAOK,SAAUC,IAAI,aAEnCH,EAAAA,EAAAA,MAAA,OAAKL,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBAAqBC,SAAEC,EAAOO,SAC5CV,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uPAGHI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uBAAsBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,UAAES,EAAAA,EAAAA,GAASR,EAAOS,UACvDN,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,GAAI,IAAKb,UAAU,gBAAeC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,OAAKe,QAAQ,WAAWC,KAAK,OAAOC,OAAO,eAAeC,MAAM,6BAA4BhB,UACxFF,EAAAA,EAAAA,KAAA,QAAMmB,EAAE,4BAA4BC,YAAY,MAAMC,cAAc,QAAQC,eAAe,YACzF,+BAW9C,CACJ,C","sources":["pages/ProductPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { currency } from '../utils/currency';\r\n\r\ntype Item = {\r\n    id: number;\r\n    imageUrl: string;\r\n    title: string;\r\n    types: number[];\r\n    sizes: number[];\r\n    price: number;\r\n    category: number;\r\n    rating: number;\r\n}[]\r\n\r\nconst ProductPage: React.FC = () => {\r\n    const [items, setItems] = useState<Item>();\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const { data } = await axios.get('http://localhost:3000/db.json');\r\n                setItems(data);\r\n            } catch (error) {\r\n                alert('An error occurred while receiving dataðŸ˜•');\r\n                navigate('/');\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (!items) {\r\n        return (\r\n            <div className=\"container\">\r\n                &quot;Download...&quot;\r\n            </div>\r\n        );\r\n    } \r\n    \r\n    if (id) {\r\n        const findId = items.find(obj => obj.id === +id);\r\n    \r\n        return (\r\n            findId && \r\n            <div className='page-wrapper'>\r\n                <div className='content-wrapper'>\r\n                    <div className='content'>\r\n                        <div className=\"container\">\r\n                            <div className=\"product-page\">\r\n                                <div className=\"product-page__image\">\r\n                                    <img src={findId.imageUrl} alt=\"Pizza\" />\r\n                                </div>\r\n                                <div className='product-page__info'>\r\n                                    <h1 className=\"product-page__title\">{findId.title}</h1>\r\n                                    <p>\r\n                                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae perspiciatis totam, pariatur omnis eius doloremque explicabo, vero reiciendis dolor similique voluptatum assumenda dolore beatae in. Eveniet ipsum corporis obcaecati facere!\r\n                                    </p>\r\n                                    <div className=\"product-page__bottom\">\r\n                                        <span className=\"product-page__price\">{currency(findId.price)}</span>\r\n                                        <Link to={\"/\"} className=\"come-back-btn\">\r\n                                            <svg viewBox=\"0 0 8 14\" fill=\"none\" stroke=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path d=\"M7 13L1 6.93015L6.86175 1\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                            </svg>\r\n                                            Come back\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ProductPage;"],"names":["_useState","useState","_useState2","_slicedToArray","items","setItems","navigate","useNavigate","id","useParams","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","sent","t0","alert","stop","apply","arguments","fetchData","_jsx","className","children","findId","find","obj","_jsxs","src","imageUrl","alt","title","currency","price","Link","to","viewBox","fill","stroke","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin"],"sourceRoot":""}